% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{growing_season}
\alias{growing_season}
\title{Growing season climate}
\usage{
growing_season(
  data,
  min_growing_day = 115,
  min_ending_day = 227,
  threshold_growth = 4,
  threshold_dormancy = 0
)
}
\arguments{
\item{data}{Data frame created from the generateWeather() function of BioSIM generated using the "Climatic_Daily" model}

\item{min_growing_day}{Minimum starting date for the growing season (year day format). This minimum date is used to avoid winter thaws from inducing the start of the growing season.}

\item{min_ending_day}{Minimum ending date for the growing season (year day format). This minimum data is used to avoid late spring forest from inducing the end of the growing season.}

\item{threshold_growth}{Temperature threshold (Celsius degrees) for inducing growth. This threshold is used to induce the start of the growing season (after the 5th day during which the mean daily temperature reaches this threshold), and for calculating growing season growing degree-days, which are computed based on this threshold.}

\item{threshold_dormancy}{Temperature threshold (Celsius degrees) for inducing dormancy This threshold is used to induce the end of the growing season (after the 5th day during which the minimum daily temperature falls below this threshold).}
}
\description{
Compute growing season start and end dates, growing degree-day (Celsius degrees), and precipitation (mm), based on the output of the \code{generateWeather()} function using the model "Climatic_Daily"of the \code{BioSIM} package.
}
\details{
The onset of the growing season is defined as the fifth consecutive day during which the mean daily temperature reaches a certain temperature threshold. The end of the growing season is identified as the fifth consecutive day during which the minimum temperature reaches a dormancy threshold.
}
\examples{
file = system.file("extdata", "dayclim_GS.txt", package="ExtremeEvents")
data <- read.table(file)

GS = growing_season(data)
GS
}
